{"ast":null,"code":"var _jsxFileName = \"/Users/ismaelmahamadou/Desktop/creact-intra/todo-app/todo-app/src/component/Timer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useTimer } from 'use-timer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Timer() {\n  _s();\n\n  const {\n    time,\n    start,\n    pause,\n    reset,\n    status\n  } = useTimer();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: start,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: pause,\n        children: \"Pause\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: reset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Elapsed time: \", time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), status === 'RUNNING' && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Running...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 32\n    }, this)]\n  }, void 0, true);\n} // function Timer() {\n//     let time = ''\n//     const [seconds,setSecondes,]= useState(0)\n//     const [minutes,setMinutes]= useState(0);\n//     const [hour ,setHour]= useState(0);\n//     const [startTimer, setStartTimer]= useState(false)\n//     const [timerId, setTimerId]= useState(0)\n//     useEffect(()=>{\n//        let intervalId = null;\n//        if (startTimer){\n//         intervalId = setInterval(()=>{\n//           setSecondes( prev => prev +=1);\n//           if (seconds + 1 === 59){\n//            setMinutes( prev => prev +=1)\n//            setSecondes(0)\n//           }if(minutes === 59){\n//            setHour( prev => prev +=1)\n//           }\n//         },1000)\n//         // clearInterval(intervalId)\n//        }else{\n//        clearInterval(seconds, minutes, hour)\n//        }\n//        return ()=>{\n//         if (seconds !== 0){\n//           clearInterval(timerId)\n//         }\n//        }\n//         /* time = setInterval(() => {\n//           setSecondes( seconds + 1);\n//            if (seconds + 1 === 59){\n//             setMinutes( minutes + 1)\n//             setSecondes(0)\n//            }if(minutes === 59){\n//             setHour( hour + 1)\n//            }\n//         }, 1000);\n//         return ()=> clearInterval(time) */\n//     },[startTimer]);\n//   /* const handleStop =(e)=>{\n//     e.preventDefault()\n//     clearInterval(time)\n//   } */\n//     return (\n//        <div>\n//         <h3>\n//              {hour < 10 ? '0' + hour:hour}:\n//              {minutes < 10 ? '0' + minutes:minutes } :\n//              {seconds< 10 ? '0' + seconds:seconds }\n//         </h3>\n//         <button type=\"button\" className=\"btn btn-primary w-50\" onClick={()=> setStartTimer(true)}>Start</button>\n//         <button type=\"button\" className=\"btn btn-danger w-50\" onClick={()=> setStartTimer(false) }>Stop</button>\n//        </div>\n//     )\n// }\n\n\n_s(Timer, \"V+qKOo0l8fngr9RLc5J2VEOO/GE=\", false, function () {\n  return [useTimer];\n});\n\n_c = Timer;\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","useTimer","Timer","time","start","pause","reset","status"],"sources":["/Users/ismaelmahamadou/Desktop/creact-intra/todo-app/todo-app/src/component/Timer.jsx"],"sourcesContent":["import React,{useState, useEffect} from 'react'\nimport {useTimer} from 'use-timer'\nfunction Timer() {\n  const { time, start, pause, reset, status } = useTimer();\n \n  return (\n    <>\n      <div>\n        <button onClick={start}>Start</button>\n        <button onClick={pause}>Pause</button>\n        <button onClick={reset}>Reset</button>\n      </div>\n      <p>Elapsed time: {time}</p>\n      {status === 'RUNNING' && <p>Running...</p>}\n    </>\n  );\n}\n\n// function Timer() {\n//     let time = ''\n//     const [seconds,setSecondes,]= useState(0)\n//     const [minutes,setMinutes]= useState(0);\n//     const [hour ,setHour]= useState(0);\n//     const [startTimer, setStartTimer]= useState(false)\n//     const [timerId, setTimerId]= useState(0)\n\n//     useEffect(()=>{\n//        let intervalId = null;\n//        if (startTimer){\n//         intervalId = setInterval(()=>{\n//           setSecondes( prev => prev +=1);\n//           if (seconds + 1 === 59){\n//            setMinutes( prev => prev +=1)\n//            setSecondes(0)\n//           }if(minutes === 59){\n//            setHour( prev => prev +=1)\n//           }\n//         },1000)\n//         // clearInterval(intervalId)\n//        }else{\n//        clearInterval(seconds, minutes, hour)\n//        }\n//        return ()=>{\n//         if (seconds !== 0){\n//           clearInterval(timerId)\n//         }\n//        }\n//         /* time = setInterval(() => {\n            \n//           setSecondes( seconds + 1);\n//            if (seconds + 1 === 59){\n//             setMinutes( minutes + 1)\n//             setSecondes(0)\n//            }if(minutes === 59){\n//             setHour( hour + 1)\n//            }\n//         }, 1000);\n//         return ()=> clearInterval(time) */\n//     },[startTimer]);\n//   /* const handleStop =(e)=>{\n//     e.preventDefault()\n//     clearInterval(time)\n//   } */\n//     return (\n//        <div>\n//         <h3>\n//              {hour < 10 ? '0' + hour:hour}:\n//              {minutes < 10 ? '0' + minutes:minutes } :\n//              {seconds< 10 ? '0' + seconds:seconds }\n//         </h3>\n//         <button type=\"button\" className=\"btn btn-primary w-50\" onClick={()=> setStartTimer(true)}>Start</button>\n//         <button type=\"button\" className=\"btn btn-danger w-50\" onClick={()=> setStartTimer(false) }>Stop</button>\n//        </div>\n//     )\n// }\n\nexport default Timer\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAAQC,QAAR,QAAuB,WAAvB;;;;AACA,SAASC,KAAT,GAAiB;EAAA;;EACf,MAAM;IAAEC,IAAF;IAAQC,KAAR;IAAeC,KAAf;IAAsBC,KAAtB;IAA6BC;EAA7B,IAAwCN,QAAQ,EAAtD;EAEA,oBACE;IAAA,wBACE;MAAA,wBACE;QAAQ,OAAO,EAAEG,KAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAQ,OAAO,EAAEC,KAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAQ,OAAO,EAAEC,KAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAME;MAAA,6BAAkBH,IAAlB;IAAA;MAAA;MAAA;MAAA;IAAA,QANF,EAOGI,MAAM,KAAK,SAAX,iBAAwB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAP3B;EAAA,gBADF;AAWD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAxESL,K;UACuCD,Q;;;KADvCC,K;AA0ET,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}